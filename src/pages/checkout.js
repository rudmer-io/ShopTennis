import { useSelector } from "react-redux";
import Header from "../components/Header";
import CheckoutProduct from "../components/CheckoutProduct";
import { selectItems, selectTotal } from "../slices/basketSlice";
import Currency from "react-currency-formatter";
import { useSession } from "next-auth/client";
import { groupBy } from "lodash";
import Head from "next/head";
import { toast, ToastContainer } from "react-toastify";
import { loadStripe } from "@stripe/stripe-js";
import axios from "axios";
const stripePromise = loadStripe(process.env.stripe_public_key);

function Checkout() {
  const items = useSelector(selectItems);
  const total = useSelector(selectTotal);
  const [session] = useSession();

  const createCheckOutSession = async () => {
    const stripe = await stripePromise;

    const checkoutSession = await axios.post("/api/create-checkout-session", {
      items: items,
      email: session.user.email,
      name: session.user.name,
    });

    const result = await stripe.redirectToCheckout({
      sessionId: checkoutSession.data.id,
    });

    if (result.error) {
      toast.error(result.error.message);
    }
  };

  const groupedItems = Object.values(groupBy(items, "id"));
  return (
    <div className="bg-[#10acd3] dark:bg-gray-800 min-h-screen">
      <Header />
      <Head>
        <title>Checkout</title>
        <meta name="description" content="Generated by create next app" />
        <link
          rel="icon"
          href="https://res.cloudinary.com/dssvrf9oz/image/upload/v1620273120/image-removebg-preview_6_obe3fv.png"
        />
      </Head>
      <ToastContainer />

      <main className="lg:flex max-w-screen-2xl mx-auto bg-[#10acd3] dark:bg-gray-800">
        {/* Left */}

        <div className="backdrop-filter bg-white bg-opacity-25 dark:text-white dark:bg-opacity-10 shadow-xl dark:shadow-none flex flex-col p-5 space-y-50 mt-5 mb-5 rounded-lg ml-5 mr-5">
          <h1
            className={`text-3xl dark:text-gray-200 ${
              items.length > 0 ? "border-b pb-4" : "pb-2"
            }`}
          >
            {items.length === 0 ? "Your Basket is empty." : "Shopping Basket"}
          </h1>
          <div>
            {groupedItems.map((group, i) => (
              <div
                data-aos="flip-left"
                key={group[0].image}
                timeout={500}
                classNames="item"
              >
                <CheckoutProduct
                  id={group[0].id}
                  title={group[0].title}
                  rating={group[0].rating}
                  price={group[0].price}
                  description={group[0].description}
                  category={group[0].category}
                  image={group[0].image}
                  hasPrime={group[0].hasPrime}
                  quantity={group.length}
                />
              </div>
            ))}
          </div>
        </div>

        {/* Right */}
        {items.length > 0 && (
          <div
            style={{}}
            className="backdrop-filter bg-white bg-opacity-25 dark:text-white dark:bg-opacity-10 shadow-xl dark:shadow-none flex flex-col p-5 space-y-50 mt-5 mb-5 rounded-lg ml-5 mr-5"
          >
            <h2 className="whitespace-nowrap text-[#023047] dark:text-gray-200">
              Subtotal ({items.length} items):{" "}
              <span className="font-bold text-[#023047] dark:text-gray-200">
                <Currency quantity={total} currency="INR" />
              </span>
            </h2>

            <button
              role="link"
              onClick={createCheckOutSession}
              disabled={!session}
              className={`btn mt-2 ${
                !session &&
                "from-gray-300 to-gray-500 border-gray-200 text-gray-300 cursor-not-allowed hover:from-gray-300"
              }`}
            >
              {!session ? "Sign in to checkout" : "Proceed to checkout"}
            </button>
          </div>
        )}
      </main>
    </div>
  );
}

export default Checkout;
